---

const pricingPlans = [
  {
    name: "Starter",
    price: "€100",
    period: "per month",
    users: "Up to 1,000 users",
    features: [
      "Up to 1,000 active users",
      "All gamification features",
      "Unlimited elements",
      "Email support",
      "Basic analytics"
    ],
    buttonText: "Choose Plan",
    popular: false
  },
  {
    name: "Growth",
    price: "€1,000",
    period: "per month",
    users: "Up to 25,000 users",
    features: [
      "Up to 25,000 active users",
      "All gamification mechanics",
      "Unlimited elements",
      "Priority support",
      "Basic Analytics"
    ],
    buttonText: "Choose Plan",
    popular: false
  },
  {
    name: "Scale",
    price: "€2,500",
    period: "per month",
    users: "Up to 100,000 users",
    features: [
      "Up to 100,000 active users",
      "All gamification mechanics",
      "Unlimited elements",
      "Advanced support",
      "Advanced reporting"
    ],
    buttonText: "Choose Plan",
    popular: true
  },
  {
    name: "Enterprise",
    price: "On Request",
    period: "",
    users: "Above 100,000 users",
    features: [
      "Unlimited active users",
      "All gamification mechanics",
      "Unlimited elements",
      "Custom SLA and support",
      "Advanced reporting"
    ],
    buttonText: "Contact Sales",
    popular: false
  }
];
---

<section id="pricing" class="pricing-section">
    <div class="container">
        <div class="max-w-lg m-auto text-center">
            <h1 class="text-lg">Simple, transparent pricing</h1>
            <p class="text-sm">Choose the plan that fits your needs. Based on the number of monthly active users, scale up or down as your business or projects grows.</p>
        </div>
        
        <div class="pricing-grid pricing-spacing">
            {pricingPlans.map((plan) => (
                <div class={`pricing-card ${plan.popular ? 'popular' : ''}`}>
                    {plan.popular && <div class="popular-badge">Most Popular</div>}
                    
                    <div class="pricing-header">
                        <h3 class="text-md text-bolder">{plan.name}</h3>
                        <div class="pricing-price">
                            <span class="price">{plan.price}</span>
                            {plan.period && <span class="period">{plan.period}</span>}
                        </div>
                        <p class="users">{plan.users}</p>
                    </div>
                    
                    <div class="pricing-features">
                        <ul>
                            {plan.features.map((feature) => (
                                <li class="feature-item">
                                    <svg class="check-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="16">
                                        <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 0 1 .208 1.04l-9 13.5a.75.75 0 0 1-1.154.114l-6-6a.75.75 0 0 1 1.06-1.06l5.353 5.353 8.493-12.74a.75.75 0 0 1 1.04-.207Z" clip-rule="evenodd" />
                                    </svg>
                                    {feature}
                                </li>
                            ))}
                        </ul>
                    </div>
                    
                    <div class="pricing-cta">
                        <a href={plan.name === "Enterprise" ? "mailto:contact@gamelayer.co" : plan.name === "Starter" ? "https://pay.gocardless.com/BRT00040JFMP578" : plan.name === "Growth" ? "https://pay.gocardless.com/BRT00040JFP66YY" : plan.name === "Scale" ? "https://pay.gocardless.com/BRT00040JFTJ18E" : "#"} target={plan.name === "Enterprise" ? "_self" : "_blank"} rel={plan.name === "Enterprise" ? "" : "noopener noreferrer"} class={`button ${plan.popular ? 'button-primary' : 'button-secondary'}`}>
                            {plan.buttonText}
                        </a>
                    </div>
                </div>
            ))}
        </div>
    </div>
</section>

<style>
    .pricing-section {
        background-color: var(--as-peach);
        padding: 80px 0;
    }

    .pricing-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 3.5rem;
        max-width: 1400px;
        margin: 0 auto;
        justify-items: center;
    }

    .pricing-spacing {
        margin-top: 100px;
    }

    .pricing-card {
        background: white;
        border: 1px solid var(--color-border);
        border-radius: 12px;
        padding: 1.5rem;
        position: relative;
        transition: all 0.3s ease;
        display: flex;
        flex-direction: column;
        width: 100%;
        max-width: 240px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .pricing-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }

    .pricing-card.popular {
        border-color: var(--as-accent);
        box-shadow: 0 0 0 1px var(--as-accent);
    }

    .popular-badge {
        position: absolute;
        top: -12px;
        left: 50%;
        transform: translateX(-50%);
        background: var(--as-accent);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        z-index: 10;
    }

    .pricing-header {
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .pricing-header h3 {
        margin: 10px 0;
        color: var(--color-text);
    }

    .pricing-price {
        margin-bottom: 0.5rem;
    }

    .price {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--color-text);
    }

    .period {
        font-size: 1rem;
        color: var(--color-text-muted);
        margin-left: 0.25rem;
    }

    .users {
        color: var(--color-text-muted);
        font-size: 0.875rem;
    }

    .pricing-features {
        flex-grow: 1;
        margin-bottom: 1.5rem;
    }

    .pricing-features ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .feature-item {
        display: flex;
        align-items: flex-start;
        gap: 0.5rem;
        margin-bottom: 0.75rem;
        font-size: 0.8rem;
        color: var(--color-text);
    }

    .check-icon {
        color: var(--as-accent);
        flex-shrink: 0;
        margin-top: 0.125rem;
    }

    .pricing-cta {
        margin-top: auto;
    }

    .pricing-cta .button {
        width: 100%;
        justify-content: center;
    }

    @media (max-width: 1200px) {
        .pricing-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 2.5rem;
        }
    }

    @media (max-width: 900px) {
        .pricing-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 2rem;
        }
    }

    @media (max-width: 600px) {
        .pricing-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        .pricing-card {
            padding: 1.5rem;
        }

        .price {
            font-size: 2rem;
        }
    }

    @media (max-width: 480px) {
        .pricing-section {
            padding: 60px 0;
        }
    }
</style>
