---
import utils from '../utils'

const reviews = utils.reviews
---

<script>
    document.addEventListener('DOMContentLoaded', function () {
      // Use event delegation for better performance
      const reviewsContainer = document.querySelector('.reviews-wrap');
      if (!reviewsContainer) return;
      
      reviewsContainer.addEventListener('mouseenter', function (e) {
        const target = e.target as HTMLElement;
        const item = target?.closest('.review-item');
        if (item) {
          gsap.to(item, { scale: 1.05, duration: 0.3, ease: "power2.out" });
        }
      }, true);
      
      reviewsContainer.addEventListener('mouseleave', function (e) {
        const target = e.target as HTMLElement;
        const item = target?.closest('.review-item');
        if (item) {
          gsap.to(item, { scale: 1, duration: 0.3, ease: "power2.out" });
        }
      }, true);
    });
</script>


<section>
    <div class="container">
        <div class="max-w-lg m-auto text-center">
            <h2 class="text-lg">Why companies ‚ù§ GameLayer</h2>
        </div>
    </div>

   <div class="reviews mt-4">
    <div class="reviews-wrap grid gap-1 max-w-lg m-auto">
        {reviews.map((item) => {
            // Pre-compute percentage and description for better performance
            const statsMap = {
                '75% of users engaged weekly': { percentage: '75%', description: 'of users engaged weekly' },
                '60% boost in brand sentiment': { percentage: '60%', description: 'boost in brand sentiment' },
                '25% increase in session time': { percentage: '25%', description: 'increase in session time' },
                '200% increase in task completion': { percentage: '200%', description: 'increase in task completion' },
                '50% boost in product awareness': { percentage: '50%', description: 'boost in product awareness' },
                '40% increase in no. of sessions': { percentage: '40%', description: 'increase in no. of sessions' }
            };
            
            const stats = statsMap[item.comment as keyof typeof statsMap] || { percentage: item.comment, description: '' };
            
            return (
                <div class="review-item">
                    <div class="item-body">
                        <div class="stat-percentage">{stats.percentage}</div>
                        <div class="stat-description">{stats.description}</div>
                    </div>
                </div>
            );
        })}
    </div>
   </div>


</section>



<style lang="scss"> 

section{
    padding-top: 60px;
    .reviews{
        position: relative;
    }
    .reviews-wrap{    
        grid-template-columns: repeat(6, 1fr);
        justify-items: center;
        .review-item{
            border-radius: 16px;
            margin-bottom: 10px;
            width: 150px;
            height: 150px;
            border: 1px solid var(--as-black);
            transition: all .3s ease-in-out;
            background-color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            .item-body{
                padding: 15px;
                text-align: center;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                height: 100%;
                width: 100%;
                .stat-percentage{
                    font-size: 4.4rem;
                    font-weight: 700;
                    color: var(--as-black);
                    margin: 0 0 10px 0;
                    line-height: 1;
                }
                .stat-description{
                    font-size: 1.4rem;
                    font-weight: 500;
                    color: var(--as-black);
                    margin: 0;
                    line-height: 1.3;
                    text-align: center;
                }
            }
            &:hover{
                box-shadow: 6px 6px #000;
            }
        }
    }

    .review-cta{
        margin-left: auto;
    }

    .reviewer{
        justify-content: start;
        .avatar{
            height: 46px;
            width: 46px;
        }
        .info p{
            margin: 0;
        }
    }

    // Tablet landscape (1024px and below)
    @media (max-width: 1024px) {
        .reviews-wrap{
            grid-template-columns: repeat(3, 1fr);
        }
        .reviews-wrap .review-item{
            width: 140px;
            height: 140px;
        }
        .reviews-wrap .review-item .item-body .stat-percentage{
            font-size: 3.6rem;
        }
        .reviews-wrap .review-item .item-body .stat-description{
            font-size: 1.3rem;
        }
    }
    
    // Tablet portrait (768px and below)
    @media (max-width: 768px) {
        .reviews-wrap{
            grid-template-columns: repeat(2, 1fr);
        }
        .reviews-wrap .review-item{
            width: 125px;
            height: 125px;
        }
        .reviews-wrap .review-item .item-body .stat-percentage{
            font-size: 3.2rem;
        }
        .reviews-wrap .review-item .item-body .stat-description{
            font-size: 1.2rem;
        }
    }
    
    // Mobile landscape (640px and below)
    @media (max-width: 640px) {
        .reviews-wrap{
            grid-template-columns: repeat(2, 1fr);
        }
        .reviews-wrap .review-item{
            width: 110px;
            height: 110px;
        }
        .reviews-wrap .review-item .item-body .stat-percentage{
            font-size: 2.8rem;
        }
        .reviews-wrap .review-item .item-body .stat-description{
            font-size: 1.1rem;
        }
    }
    
    // Mobile portrait (480px and below)
    @media (max-width: 480px) {
        .reviews-wrap{
            grid-template-columns: repeat(2, 1fr);
        }
        .reviews-wrap .review-item{
            width: 100px;
            height: 100px;
        }
        .reviews-wrap .review-item .item-body .stat-percentage{
            font-size: 2.4rem;
        }
        .reviews-wrap .review-item .item-body .stat-description{
            font-size: 1rem;
        }
    }

    @media (max-width: 700px) {
        padding-top: 0px;
        .container{
            flex-direction: column;
            margin: 0 auto;
            text-align: center;
            .review-cta{
                margin: 20px 0;
            }
        }
        .reviews-wrap{
            grid-template-columns: repeat(2, 1fr);
            .review-item{
                width: 100%;
                max-width: 150px;
                height: 150px;
                margin: 0 auto 10px auto;
                .item-body{
                    padding: 15px 10px;
                }
            }
        }
    }
}



</style>